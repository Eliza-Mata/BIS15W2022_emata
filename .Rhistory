box(
plotOutput("plot", width = "600px", height = "500px")
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
filament_cyanos %>%
filter(!is.na(tempurature_avg)) %>%
ggplot(aes_string(x = filament_cyanos$organism, y = input$x, fill = filament_cyanos$organism)) +
geom_col()+
theme(legend.position = "right",
text = element_text(size=6),
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "CTG count for Cyanobacteria Species",x = "Cyanobacteria", y = "Gene Count")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
filament_cyanos <- readr::read_csv("data/filamentous_cyano_meta.csv")
filament_cyanos <- clean_names(filament_cyanos)
trim_fil_cyn <- filament_cyanos %>% filter(!is.na(tempurature_avg)) %>%
filament_cyanos <- readr::read_csv("data/filamentous_cyano_meta.csv")
filament_cyanos <- clean_names(filament_cyanos)
trim_fil_cyn <- filament_cyanos %>% filter(!is.na(tempurature_avg))
filament_cyanos <- readr::read_csv("data/filamentous_cyano_meta.csv")
filament_cyanos <- clean_names(filament_cyanos)
trim_fil_cyn <- filament_cyanos %>% filter(!is.na(tempurature_avg))
library(shiny)
library(shinydashboard)
library(shiny)
ui <- dashboardPage(
dashboardHeader( title = "CTG count for Cyanobacteria Species"),
dashboardSidebar(disable = T),
dashboardBody(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Gene",
choices = c("gene_gyr_a", "gene_nus_a", "gene_inf_c","gene_inf_a", "gene_ots_a",
"gene_dna_k", "gene_rec_a", "gene_dna_j","gene_ace_f", "gene_dea_d",
"gene_inf_b", "gene_tig", "gene_rnr", "gene_dna_a", "gene_hup_b",
"gene_rbf_a", "gene_yfl_a", "gene_pnp", "gene_csp", "gene_ace_e",
"gene_des_a"),
selected= "gene_gyr_a")
),
box(
plotOutput("plot", width = "600px", height = "500px")
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(aes_string(x = trim_fil_cyn$organism, y = trim_fil_cyn$input$x, fill = trim_fil_cyn$organism)) +
geom_col()+
theme(legend.position = "right",
text = element_text(size=6),
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "CTG count for Cyanobacteria Species",x = "Cyanobacteria", y = "Gene Count")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
View(trim_fil_cyn)
filament_cyanos <- readr::read_csv("data/filamentous_cyano_meta.csv")
filament_cyanos <- clean_names(filament_cyanos)
trim_fil_cyn <- filament_cyanos %>% filter(!is.na(tempurature_avg)) %>% select(genus, organism, starts_with("gene_"))
View(trim_fil_cyn)
trim_fil_cyn$organism
typeof(trim_fil_cyn$organism)
filament_cyanos <- readr::read_csv("data/filamentous_cyano_meta.csv")
filament_cyanos <- clean_names(filament_cyanos)
trim_fil_cyn <- filament_cyanos %>% filter(!is.na(tempurature_avg)) %>% select(genus, organism, starts_with("gene_")) %>% mutate(organism = as.factor(organism), genus = as.factor(genus))
filament_cyanos <- readr::read_csv("data/filamentous_cyano_meta.csv")
filament_cyanos <- clean_names(filament_cyanos)
trim_fil_cyn <- filament_cyanos %>% filter(!is.na(tempurature_avg)) %>% select(genus, organism, starts_with("gene_")) %>% mutate(organism = as.factor(organism), genus = as.factor(genus))
head(trim_fil_cyn)
library(shiny)
library(shinydashboard)
library(shiny)
ui <- dashboardPage(
dashboardHeader( title = "CTG count for Cyanobacteria Species"),
dashboardSidebar(disable = T),
dashboardBody(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Gene",
choices = c("gene_gyr_a", "gene_nus_a", "gene_inf_c","gene_inf_a", "gene_ots_a",
"gene_dna_k", "gene_rec_a", "gene_dna_j","gene_ace_f", "gene_dea_d",
"gene_inf_b", "gene_tig", "gene_rnr", "gene_dna_a", "gene_hup_b",
"gene_rbf_a", "gene_yfl_a", "gene_pnp", "gene_csp", "gene_ace_e",
"gene_des_a"),
selected= "gene_gyr_a")
),
box(
plotOutput("plot", width = "600px", height = "500px")
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(aes_string(x = trim_fil_cyn$organism, y = trim_fil_cyn$input$x, fill = trim_fil_cyn$organism)) +
geom_col()+
theme(legend.position = "right",
text = element_text(size=6),
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "CTG count for Cyanobacteria Species",x = "Cyanobacteria", y = "Gene Count")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
filament_cyanos <- readr::read_csv("data/filamentous_cyano_meta.csv")
filament_cyanos <- clean_names(filament_cyanos)
trim_fil_cyn <- filament_cyanos %>% filter(!is.na(tempurature_avg)) %>% select(genus, organism, starts_with("gene_")) %>% mutate(organism = as.factor(organism), genus = as.factor(genus))
head(trim_fil_cyn)
library(shiny)
library(shinydashboard)
library(shiny)
ui <- dashboardPage(
dashboardHeader( title = "CTG count for Cyanobacteria Species"),
dashboardSidebar(disable = T),
dashboardBody(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Gene",
choices = c("gene_gyr_a", "gene_nus_a", "gene_inf_c","gene_inf_a", "gene_ots_a",
"gene_dna_k", "gene_rec_a", "gene_dna_j","gene_ace_f", "gene_dea_d",
"gene_inf_b", "gene_tig", "gene_rnr", "gene_dna_a", "gene_hup_b",
"gene_rbf_a", "gene_yfl_a", "gene_pnp", "gene_csp", "gene_ace_e",
"gene_des_a"),
selected= "gene_gyr_a")
),
box(
plotOutput("plot", width = "600px", height = "500px")
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(trim_fil_cyn, aes_string(x = trim_fil_cyn$organism, y = trim_fil_cyn$input$x, fill = trim_fil_cyn$organism)) +
geom_col()+
theme(legend.position = "right",
text = element_text(size=6),
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "CTG count for Cyanobacteria Species",x = "Cyanobacteria", y = "Gene Count")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
filament_cyanos <- readr::read_csv("data/filamentous_cyano_meta.csv")
filament_cyanos <- clean_names(filament_cyanos)
trim_fil_cyn <- filament_cyanos %>% filter(!is.na(tempurature_avg)) %>% select(genus, organism, starts_with("gene_")) %>% mutate(organism = as.factor(organism), genus = as.factor(genus))
head(trim_fil_cyn)
library(shiny)
library(shinydashboard)
library(shiny)
ui <- dashboardPage(
dashboardHeader( title = "CTG count for Cyanobacteria Species"),
dashboardSidebar(disable = T),
dashboardBody(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Gene",
choices = c("gene_gyr_a", "gene_nus_a", "gene_inf_c","gene_inf_a", "gene_ots_a",
"gene_dna_k", "gene_rec_a", "gene_dna_j","gene_ace_f", "gene_dea_d",
"gene_inf_b", "gene_tig", "gene_rnr", "gene_dna_a", "gene_hup_b",
"gene_rbf_a", "gene_yfl_a", "gene_pnp", "gene_csp", "gene_ace_e",
"gene_des_a"),
selected= "gene_gyr_a")
),
box(
plotOutput("plot", width = "600px", height = "500px")
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(trim_fil_cyn, aes_string(x = organism, y = tinput$x, fill = trim_fil_cyn$organism)) +
geom_col()+
theme(legend.position = "right",
text = element_text(size=6),
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "CTG count for Cyanobacteria Species",x = "Cyanobacteria", y = "Gene Count")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
filament_cyanos <- readr::read_csv("data/filamentous_cyano_meta.csv")
filament_cyanos <- clean_names(filament_cyanos)
trim_fil_cyn <- filament_cyanos %>% filter(!is.na(tempurature_avg)) %>% select(genus, organism, starts_with("gene_")) %>% mutate(organism = as.factor(organism), genus = as.factor(genus))
head(trim_fil_cyn)
library(shiny)
library(shinydashboard)
library(shiny)
ui <- dashboardPage(
dashboardHeader( title = "CTG count for Cyanobacteria Species"),
dashboardSidebar(disable = T),
dashboardBody(
box(title = "Plot Options", width = 3,
selectInput("y", "Select Gene",
choices = c("gene_gyr_a", "gene_nus_a", "gene_inf_c","gene_inf_a", "gene_ots_a",
"gene_dna_k", "gene_rec_a", "gene_dna_j","gene_ace_f", "gene_dea_d",
"gene_inf_b", "gene_tig", "gene_rnr", "gene_dna_a", "gene_hup_b",
"gene_rbf_a", "gene_yfl_a", "gene_pnp", "gene_csp", "gene_ace_e",
"gene_des_a"),
selected= "gene_gyr_a")
),
box(
plotOutput("plot", width = "600px", height = "500px")
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(trim_fil_cyn, aes_string(x = trim_fil_cyn$organism, y = trim_fil_cyn$input$y, fill = trim_fil_cyn$organism)) +
geom_col()+
theme(legend.position = "right",
text = element_text(size=6),
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "CTG count for Cyanobacteria Species",x = "Cyanobacteria", y = "Gene Count")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
glimpse(trim_fil_cyn)
library(shiny)
library(shinydashboard)
library(shiny)
ui <- dashboardPage(
dashboardHeader( title = "CTG count for Cyanobacteria Species"),
dashboardSidebar(disable = T),
dashboardBody(
box(title = "Plot Options", width = 3,
selectInput("y", "Select Gene",
choices = c("gene_gyr_a", "gene_nus_a", "gene_inf_c","gene_inf_a", "gene_ots_a",
"gene_dna_k", "gene_rec_a", "gene_dna_j","gene_ace_f", "gene_dea_d",
"gene_inf_b", "gene_tig", "gene_rnr", "gene_dna_a", "gene_hup_b",
"gene_rbf_a", "gene_yfl_a", "gene_pnp", "gene_csp", "gene_ace_e",
"gene_des_a"),
selected= "gene_gyr_a")
),
box(
plotOutput("plot", width = "600px", height = "500px")
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
trim_fil_cyn %>%
## pivot long, make gene the filter arg (or use t/f bool filter), make y = value (pivot to count?)
filter(gene)
ggplot(trim_fil_cyn, aes_string(x = "organism", y = "gene_dna_j"))+
geom_col()+
theme(legend.position = "right",
text = element_text(size=6),
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "CTG count for Cyanobacteria Species",x = "Cyanobacteria", y = "Gene Count")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
knitr::opts_chunk$set(echo = TRUE)
#install.packages("viridisLite")
#install.packages("svglite")
library(tidyverse)
library(RColorBrewer)
library(paletteer)
library(janitor)
library(here)
library(skimr)
library(viridis)
library(shiny)
library(shinydashboard)
library(devtools)
library(svglite)
filament_cyanos <- readr::read_csv("data/filamentous_cyano_meta.csv")
summary(filament_cyanos)
head(filament_cyanos)
filament_cyanos <- clean_names(filament_cyanos)
names(filament_cyanos)
gene_data_genus <- filament_cyanos %>%
select(genus, contains("gene_")) %>%
pivot_longer(-genus,
names_to = "gene",
values_to = "gene_count") %>%
filter(!is.na(gene_count))
gene_data_genus
gene_data_genus$gene_count <- as.factor(gene_data_genus$gene_count)
fil_heatmap <- gene_data_genus %>%
ggplot(aes(y=gene, x=genus))+
geom_tile(aes(fill= gene_count, color="white"))+
scale_fill_viridis(discrete=TRUE, direction = -1)+
theme(legend.position = "right",
text = element_text(size=6),
axis.text.x = element_text(angle = 45, hjust=1))+
coord_fixed()+ #maintains aspect ratio so 1 unit on x is 1 unit on y
labs(title = "Cold Tolerance Gene Count for Cyanobacteria Genera",x = "Genome", y = "Gene")
ggsave("figures/fil_gene_count_genus_heatmap.svg", width=10, height=6, plot = fil_heatmap, dpi = 200)
fil_heatmap
gene_data_organism <- filament_cyanos %>%
select(organism, contains("gene_")) %>% # get rid of the gene_ part for the final pres.
pivot_longer(-organism,
names_to = "gene",
values_to = "gene_count") %>%
filter(!is.na(gene_count))
gene_data_organism
gene_data_organism$gene_count <- as.factor(gene_data_organism$gene_count)
fil_heatmap <- gene_data_organism %>%
ggplot(aes(y=gene, x=organism))+
geom_tile(aes(fill= gene_count, color="white"))+
scale_fill_viridis(discrete=TRUE, direction = -1)+
theme(legend.position = "right",
text = element_text(size=7),
axis.text.x = element_text(angle = 60, hjust=1))+
coord_fixed()+ #maintains aspect ratio so 1 unit on x is 1 unit on y
labs(title = "Cold Tolerance Gene Count for Cyanobacteria Strains",x = "Genome", y = "Gene")
ggsave("figures/fil_gene_count_heatmap.jpeg", width=10, height=6, plot = fil_heatmap, dpi = 200)
fil_heatmap
temperature_gene <- filament_cyanos %>%
select(organism, tempurature_avg, contains("gene_")) %>%
filter(!is.na(tempurature_avg))
temperature_gene
temp_organism <- filament_cyanos %>%
select(organism, tempurature_avg, genus) %>%
filter(!is.na(tempurature_avg)) %>%
ggplot(aes(x = organism, y = tempurature_avg, fill = genus)) +
geom_col()+
theme(legend.position = "right",
text = element_text(size=7),
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "Environmental Temperature for Cyanobacteria Species",x = "Cyanobacteria", y = "Temperature C")
temp_organism
ggsave("figures/temp_organism_plot.svg", width=10, height=6, plot = temp_organism, dpi = 200)
temp_organism <- filament_cyanos %>%
select(organism, tempurature_avg, genus, gene_gyr_a) %>%
filter(!is.na(tempurature_avg)) %>%
filter(!is.na(gene_gyr_a)) %>%
ggplot(aes(x = organism, y = gene_gyr_a, fill = genus)) +
geom_col()+
theme(legend.position = "right",
text = element_text(size=6),
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "CTG count for Cyanobacteria Species",x = "Cyanobacteria", y = "Gene Count")
ggsave("figures/fil_gene_plot.svg", width=10, height=6, plot = temp_organism, dpi = 200)
temp_organism
library("tidyverse")
library("janitor")
filament_cyanos <- read_csv("data/filamentous_cyano_meta.csv") %>% clean_names()
trim_fil_cyn <- filament_cyanos %>%
filter(!is.na(tempurature_avg)) %>%
select(genus, organism, starts_with("gene_")) %>%
mutate(organism = as.factor(organism), genus = as.factor(genus))
head(trim_fil_cyn)
trim_fil_cyn_long <- trim_fil_cyn %>%
pivot_longer(-c(genus, organism),
names_to ="gene",
values_to = "n")
trim_fil_cyn_long
trim_fil_cyn_long2<- trim_fil_cyn_long %>%
filter(n!=is.na(n))
trim_fil_cyn_long2
library(shiny)
library(shinydashboard)
library(shiny)
ui <- dashboardPage(
dashboardHeader( title = "CTG count for Cyanobacteria Species"),
dashboardSidebar(disable = T),
dashboardBody(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Gene",
choices = c("gene_gyr_a", "gene_nus_a", "gene_inf_c","gene_inf_a", "gene_ots_a",
"gene_dna_k", "gene_rec_a", "gene_dna_j","gene_ace_f", "gene_dea_d",
"gene_inf_b", "gene_tig", "gene_rnr", "gene_dna_a", "gene_hup_b",
"gene_rbf_a", "gene_yfl_a", "gene_pnp", "gene_csp", "gene_ace_e",
"gene_des_a"),
selected= "gene_gyr_a")
),
box(
plotOutput("plot", width = "600px", height = "500px")
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
trim_fil_cyn_long2 %>%
filter(gene==input$x) %>%
ggplot(aes_string(x="organism", y="n", fill="organism"))+
geom_col()+
theme(legend.position = "none",
text = element_text(size=6),
axis.text.x = element_text(angle = 60, hjust=1))+
labs(title = "CTG count for Cyanobacteria Species", x = "Cyanobacteria", y = "Gene Count")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(here)
library(naniar)
library(tidyverse)
library(janitor)
library(here)
library(naniar)
#install.packages("gapminder")
library("gapminder")
gapminder
gapminder <- gapminder
View(gapminder)
head(gapminder)
summary(gapminder)
library(tidyverse)
library(RColorBrewer)
library(paletteer)
library(janitor)
library(here)
options(scipen=999) #cancels the use of scientific notation for the session
deserts <- read_csv(here("lab11", "data", "surveys_complete.csv"))
setwd("~/GitHub/Eliza-Mata-BIS15W2022_emata")
library(tidyverse)
library(RColorBrewer)
library(paletteer)
library(janitor)
library(here)
options(scipen=999) #cancels the use of scientific notation for the session
deserts <- read_csv(here("lab11", "data", "surveys_complete.csv"))
getwd()
deserts <- read_csv(here("lab11", "data", "surveys_complete.csv"))
setwd("~/GitHub/Eliza-Mata-BIS15W2022_emata")
deserts <- read_csv(here("lab11", "data", "surveys_complete.csv"))
deserts <- read_csv(here("lab11", "data", "surveys_complete.csv"))
library(tidyverse)
library(RColorBrewer)
library(paletteer)
library(janitor)
library(here)
options(scipen=999) #cancels the use of scientific notation for the session
deserts <- read_csv(here("lab11", "data", "surveys_complete.csv"))
library(tidyverse)
library(RColorBrewer)
library(paletteer)
library(janitor)
library(here)
options(scipen=999) #cancels the use of scientific notation for the session
deserts <- read_csv(here("lab11", "data", "surveys_complete.csv"))
homerange <- read_csv(here("lab11", "data", "Tamburelloetal_HomeRangeDatabase.csv"))
deserts %>%
filter(species_id=="DM" | species_id=="DS") %>%
group_by(year, species_id) %>%
summarise(n=n())
deserts$year <- as.factor(deserts$year)
glimpse(deserts)
deserts %>%
filter(species_id=="DM" | species_id=="DS") %>%
group_by(year, species_id) %>%
summarise(n=n()) %>%
ggplot(aes(x=year, y=n, group=species_id, color=species_id))+
geom_line()+
geom_point(shape=2)+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(title = "Number of samples for species DM",
x = "Year",
fill = "n")
homerange %>%
ggplot(aes(x = log10.mass)) +
geom_histogram(alpha = 0.4, color = "black", fill = "deepskyblue4", bins=40)+
labs(title = "Distribution of Body Mass")
grDevices::colors()
homerange %>%
ggplot(aes(x = log10.mass)) +
geom_density(fill="deepskyblue4", alpha  =0.4, color = "black")+
labs(title = "Distribution of Body Mass")
homerange %>%
ggplot(aes(x=log10.mass)) +
geom_histogram(aes(y = ..density..), fill = "deepskyblue4", alpha = 0.4, color = "black")+
geom_density(color = "red")+
labs(title = "Distribution of Body Mass")
glimpse(homerange)
homerange %>%
select(log10.mass) %>%
summarise(min=min(log10.mass),
max=max(log10.mass))
summary(homerange$log10.mass)
homerange <- homerange %>%
mutate(mass_category = case_when(log10.mass <= 1.75 ~ "small",
log10.mass > 1.75 & log10.mass <= 2.75 ~ "medium",
log10.mass > 2.75 ~ "large"))
glimpse(homerange)
homerange %>%
ggplot(aes(x = mass_category, fill = trophic.guild)) +
geom_bar(position="dodge")
labs(title = "Observations by Taxon and Mass Category in Homerange Data",
x = "Mass Category",
fill = "Trophic Guild")
summary(homerange$log10.hra)
library(gtools)
quartiles <- quantcut(homerange$log10.hra)
table(quartiles)
homerange %>%
ggplot(aes(x = log10.hra)) +
geom_histogram(alpha = 0.4, color = "black", fill = "deepskyblue4", bins=40)+
labs(title = "Distribution of Body Mass")
homerange %>%
ggplot(aes(x = log10.mass)) +
geom_density(fill="deepskyblue4", alpha  =0.4, color = "black")
homerange %>%
ggplot(aes(x = log10.hra)) +
geom_density(fill="deepskyblue4", alpha  =0.4, color = "black")
homerange %>%
ggplot(aes(x=log10.hra)) +
geom_histogram(aes(y = ..density..), fill = "deepskyblue4", alpha = 0.4, color = "black")+
geom_density(color = "red")
case_when?
c
case_when(?)
?case_when
